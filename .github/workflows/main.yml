name: Ruby

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    container: ${{ matrix.ruby }}
    name: Ruby ${{ matrix.ruby }}
    strategy:
      fail-fast: false

      matrix:
        ruby:
          - ruby:2.6
          - ruby:2.7
          - ruby:3.0
          - ruby:3.1
        gemfile:
          - rails52
          - rails61
          - rails70
        exclude: # https://github.com/sue445/activerecord-compatible_legacy_migration/blob/master/.github/workflows/test.yml
          - ruby: ruby:2.6
            gemfile: rails70
          - ruby: ruby:3.0
            gemfile: rails52
          - ruby: ruby:3.1
            gemfile: rails52
    env:
      BUNDLE_GEMFILE: gemfiles/${{ matrix.gemfile }}.gemfile
      DB_HOST: '127.0.0.1'
      DB_USERNAME: 'root'
      DB_PASSWORD: 'f3WpxNreVT2NgQry'

    steps:
      - uses: actions/checkout@v2

      - name: Cache vendor/bundle
        uses: actions/cache@v1
        id: cache_gem
        with:
          path: vendor/bundle
          key: v1-gem-${{ runner.os }}-${{ env.RBENV_VERSION }}-${{ github.sha }}
          restore-keys: |
            v1-gem-${{ runner.os }}-${{ env.RBENV_VERSION }}-

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true

      - name: bundle update
        run: |
          set -xe
          bundle config path vendor/bundle
          bundle update --jobs $(nproc) --retry 3
        continue-on-error: ${{ matrix.allow_failures == 'true' }}

      - name: Setup MySQL 5.7
        run: >-
          docker run -p 127.0.0.1:3306:3306 --name master-data-tool-mysql57 -e MYSQL_ROOT_PASSWORD="f3WpxNreVT2NgQry" -d mysql:5.7 \
            mysqld \
              --sql-mode=NO_ENGINE_SUBSTITUTION \
              --character-set-server=latin1 \
              --innodb-file-format=Barracuda \
              --innodb-file-per-table=1 \
              --innodb-large-prefix

      - name: Wait MySQL Startup
        timeout-minutes: 1
        run: >-
          until docker exec -i master-data-tool-mysql57 mysql -u root -h 127.0.0.1 -pf3WpxNreVT2NgQry --port 3306 -e "SHOW DATABASES;" ;
          do
            echo "..."
            sleep 1
          done

      - name: Setup DB
        run: |
          cd spec/dummy
          RAILS_ENV=test bundle exec rake db:create
          RAILS_ENV=test bundle exec rake db:migrate
        continue-on-error: ${{ matrix.allow_failures == 'true' }}

      - name: Run tests
        run: bundle exec rspec
        continue-on-error: ${{ matrix.allow_failures == 'true' }}
